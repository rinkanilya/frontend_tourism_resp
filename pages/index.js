import Head from "next/head";
import Image from "next/image";
import Navbar from "../components/Navbar/Navbar";
import SousNavbar from "../components/SousNavbar/SousNavbar";
import styles from "../styles/Home.module.css";
import PenIcon from "../assets/Pen.png";
import PlusIcon from "../assets/Plus.png";
import Trash from "../assets/Trash.png";
import PenGris from "../assets/PenGris.png";
import Button from "@mui/material/Button";
import TextField from "@mui/material/TextField";
import Dialog from "@mui/material/Dialog";
import DialogActions from "@mui/material/DialogActions";
import DialogContent from "@mui/material/DialogContent";
import DialogContentText from "@mui/material/DialogContentText";
import DialogTitle from "@mui/material/DialogTitle";
import { useState ,useEffect} from "react";
import TextareaAutosize from "@mui/material/TextareaAutosize";
import { useRouter } from "next/router";
import axios from "axios";

export default function Home() {
  const router=useRouter();
  const [open, setOpen] = useState(false);
  const [openDesc, setOpenDesc] = useState(false);
  const [Title, setTitle] = useState("");
  const [Date, setDate] = useState("");
  const [editedDesc , setEditedDesc] = useState('')
  const [desc , setDesc] = useState("")
  const [AllData, setAlldata] = useState([]);

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

 const handleClickDescOpen = () => {
    setOpenDesc(true)
  }
  const EditDesc = () => {
    setOpenDesc(false)
    setDesc(editedDesc)
  }
  let logged;
  if (typeof window !== 'undefined') {
    logged=localStorage.getItem('logged')
  }
  if(!logged){
    return(
      <div className="mx-auto">
        <button className="mx-auto btn btn-lg btn-primary" onClick={()=>router.push('/signin')}>Log in</button>
      </div>
    )
      
  }
  let lieuId;
  if (typeof window !== 'undefined') {
    lieuId= localStorage.getItem("lieuId")
    console.log(lieuId)
  }
  const AddEvent = async () => {
    const {data}= await axios.post(`${process.env.URI}event`,{title:Title,id:lieuId,date:Date})
    alert(data.message)
    setOpen(false);
  };
  const DeleteEvent = async (id) => {
    const {data}= await axios.delete(`${process.env.URI}event/${id}`)
    alert(data.message)
    setAlldata(AllData.filter((x) => x.id != id))
  };
  const getLieu=async()=>{
    const {data}= await axios.get(`${process.env.URI}lieu/${lieuId}`)
    localStorage.setItem("placeName",data.data.name)
    setDesc(` Open: ${data.data.accesstimebeg},\n Close: ${data.data.accesstimend}`)
  }
  const getEvent=async()=>{
    const {data}=await axios.get(`${process.env.URI}event/${lieuId}`)
    setAlldata(data.data)
  }
  useEffect(()=>{
    getEvent()
    getLieu()
  },[])
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <SousNavbar/>
      <div className={styles.container}>
        <div className={styles.title}>
          <h3>Descriptif</h3>
          <span onClick={handleClickDescOpen}>
            {" "}
            <Image
              src={PenIcon}
              alt="Pen"
              width={"22px"}
              height={"22px"}
            />{" "}
          </span>
        </div>
        <p>
          {desc}
        </p>
      </div>
      <div className={styles.container}>
        <div className={styles.title}>
          <h3>Ev√©nement</h3>
          <span onClick={handleClickOpen}>
            {" "}
            <Image
              src={PlusIcon}
              alt="Plus"
              width={"12px"}
              height={"12px"}
            />{" "}
          </span>
        </div>
      </div>
      <div className={styles.EventContainer}>
        {AllData.slice(0)
          .reverse()
          .map((event, index) => (
            <div key={index} className={styles.Event}>
              <div className={styles.EventTitle}>
                <span>{event.title}</span>
                <span>{event.date}</span>
              </div>
              <div className={styles.Btn}>
                <span>
                  {" "}
                  <Image
                    src={PenGris}
                    alt="Plus"
                    width={"25px"}
                    height={"29px"}
                    style={{ marginTop: "1px" }}
                  />{" "}
                </span>
                <span
                  onClick={() => {
                    DeleteEvent(event.id);
                  }}
                >
                  {" "}
                  <Image
                    src={Trash}
                    alt="Plus"
                    width={"17px"}
                    height={"25px"}
                  />{" "}
                </span>
              </div>
            </div>
          ))}
      </div>

      <Dialog open={open} onClose={handleClose}>
        <DialogTitle>Ajouter</DialogTitle>
        <DialogContent>
          <DialogContentText>Ajouter un evenement</DialogContentText>
          <TextField
            autoFocus
            margin="dense"
            label="Titre de l'evenement"
            type="text"
            fullWidth
            variant="standard"
            value={Title}
            onChange={(e) => setTitle(e.target.value)}
          />
          <TextField
            id="datetime-local"
            label="Date"
            type="datetime-local"
            defaultValue="2017-05-24T10:30"
            sx={{ width: 200 }}
            value={Date}
            margin="normal"
            onChange={(e) => setDate(`${e.target.value}:00.000Z`)}
            InputLabelProps={{
              shrink: true,
            }}
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose}>Annuler</Button>
          <Button onClick={AddEvent}>Ajouter</Button>
        </DialogActions>
      </Dialog>
      <Dialog open={openDesc} onClose={handleClose}>
        <DialogTitle>Editer</DialogTitle>
        <DialogContent>
          <DialogContentText>Editer la description</DialogContentText>
          <TextareaAutosize
            autoFocus
            margin="dense"
            label="Descriptif ...."
            type="text"
            style={{fontFamily:"Manrope" , width:"450px" , height:"100px"}}
            fullWidth
            variant="standard"
            value={editedDesc}
            onChange={(e) => setEditedDesc(e.target.value)}
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpenDesc(false)}>Annuler</Button>
          <Button onClick={EditDesc}>Editer</Button>
        </DialogActions>
      </Dialog>
    </>
  );
}
